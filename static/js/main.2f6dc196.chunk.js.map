{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","components/SearchMovie.js","routes/MovieSearch.js","routes/SearchDetail.js","components/SearchBook.js","routes/BookSearch.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","title","year","summary","poster","genres","synopsis","rating","to","pathname","state","src","alt","slice","map","genre","index","key","React","Component","Navigation","SearchMovie","id","director","actor","href","target","replace","MovieSearch","isLoading","hasSearch","movies","value","getSearchMovie","a","ID_KEY","SECRET_KEY","search","setState","axios","get","params","query","headers","items","data","handleChange","e","handleSubmit","this","movieCount","length","onSubmit","type","onChange","placeholder","movie","link","pubDate","image","userRating","SearchBook","price","discount","publisher","author","description","BookSearch","books","getSearchBook","bookCount","book","pubdate","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f6dc196.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./About.scss\";\n\nfunction About(props) {\n  console.log(props);\n\n  return (\n    <div className=\"about__container\">\n      <span>\n        \"Freedom is the freedom to say that two plut two make four, If that is\n        granted, all else follows\"\n      </span>\n      <span>- George Orwell, 1984</span>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.scss\";\nimport { Link } from \"react-router-dom\";\n\nfunction Movie({ title, year, summary, poster, genres, synopsis, rating }) {\n  return (\n    <div className=\"movie\">\n      <Link\n        to={{\n          pathname: \"/movie-detail\",\n          state: { year, title, summary, poster, genres, synopsis, rating }\n        }}\n      >\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">{title}</h3>\n          <h5 className=\"movie__year\">{year}</h5>\n          <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\n          <ul className=\"movie__genres\">\n            {genres.map((genre, index) => {\n              return (\n                <li key={index} className=\"movie__genre\">\n                  {genre}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n  rating: PropTypes.number.isRequired,\n  synopsis: PropTypes.string.isRequired\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.scss\";\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMoives = async () => {\n    // const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    // this.setState({ movies: movies });\n    //console.log(movies);\n    this.setState({ movies, isLoading: false }); // ES6에서는 객체의 키와 대입할 변수의 이름이 같으면, 코드를 축약할 수 있다.\n  };\n\n  componentDidMount() {\n    // 영화 데이터 로딩!\n    this.getMoives();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n                synopsis={movie.synopsis}\n                rating={movie.rating}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.scss\";\n\nfunction Navigation() {\n  return (\n    <div className=\"nav-wrapper\">\n      <div className=\"nav\">\n        <Link to=\"/movie-search\">Movie Search</Link>\n        <Link to=\"/book-search\">Book Search</Link>\n        <Link to=\"/about\">About</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./Detail.scss\";\n\nclass Detail extends React.Component {\n  componentDidMount() {\n    const { location, history } = this.props;\n\n    if (location.state === undefined) {\n      // state가 없는 경우\n      history.push(\"/\"); // '/' home으로 이동\n    }\n  }\n\n  render() {\n    const { location } = this.props;\n    if (location.state) {\n      return (\n        <div className=\"movie-detail-container\">\n          <div className=\"page-title-container\">\n            <h1 className=\"page-title movie-title\">\n              {location.state.title} ( {location.state.year} )\n            </h1>\n          </div>\n          <div className=\"movie-deatil\">\n            <div class=\"movie-content poster\">\n              <img\n                src={location.state.poster}\n                alt={location.state.title}\n                title={location.state.title}\n              />\n            </div>\n            <div className=\"movie-content rating\">\n              <span className=\"content-title\">Rating : </span>\n              <br />\n              <p>{location.state.rating}</p>\n            </div>\n            <div className=\"movie-content genre\">\n              <span className=\"content-title\">Genre : </span>\n              <br />\n              <p>{location.state.genres}</p>\n            </div>\n            <div className=\"movie-content synopsis\">\n              <span className=\"content-title\">Synopsis : </span>\n              <br />\n              <p>{location.state.synopsis}</p>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nfunction SearchMovie({ id, year, title, poster, rating, director, actor }) {\n  return (\n    <div className=\"movie\">\n      <a href={id} title={title} target=\"_blank\">\n        <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n          <h3 className=\"movie__title\">\n            {title.replace(/<b>/gi, \"\").replace(/<\\/b>/gi, \"\")}\n          </h3>\n          <p className=\"movie__year\">\n            <span>개봉일</span> {year}\n          </p>\n          <p className=\"movie__rating\">\n            <span>평점</span> {rating}/10\n          </p>\n          <p className=\"movie__director\">\n            <span>감독</span> {director}\n          </p>\n          <p className=\"movie__actor\">\n            <span>배우</span> {actor}\n          </p>\n        </div>\n      </a>\n    </div>\n  );\n}\n\nSearchMovie.propTypes = {\n  year: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  director: PropTypes.string.isRequired,\n  actor: PropTypes.string.isRequired\n};\n\nexport default SearchMovie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport SearchMovie from \"../components/SearchMovie\";\nimport \"./Search.scss\";\n\nclass MovieSearch extends React.Component {\n  state = {\n    isLoading: true,\n    hasSearch: false,\n    movies: [],\n    value: \"\"\n  };\n\n  getSearchMovie = async () => {\n    const ID_KEY = \"3qeEHqH6beiKz81p1B4L\";\n    const SECRET_KEY = \"uvodiheH4o\";\n    const search = this.state.value;\n\n    try {\n      if (search === \"\") {\n        this.setState({ movies: [], isLoading: false, hasSearch: false });\n        console.log(\"blank\");\n      } else {\n        const {\n          data: { items }\n        } = await axios.get(\"/api/v1/search/movie.json\", {\n          params: {\n            query: search\n          },\n          headers: {\n            \"X-Naver-Client-Id\": ID_KEY,\n            \"X-Naver-Client-Secret\": SECRET_KEY\n          }\n        });\n        console.log(items);\n        this.setState({ movies: items, isLoading: false });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  componentDidMount() {\n    // 네이버 영화 데이터 로딩!\n    this.getSearchMovie();\n  }\n\n  handleChange = (e: any) => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleSubmit = (e: any) => {\n    this.setState({ hasSearch: true });\n    this.getSearchMovie();\n  };\n\n  render() {\n    const { isLoading, hasSearch, movies } = this.state;\n    let movieCount = this.state.movies.length;\n\n    return (\n      <section className=\"container search\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <form onSubmit={this.handleSubmit} className=\"search-form\">\n            <div className=\"search-wrapper\">\n              <div className=\"input__div\">\n                <h2>영화 검색</h2>\n                <input\n                  className=\"input__search\"\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                  placeholder=\"영화를 검색해보세요\"\n                />\n                <button type=\"submit\" className=\"action primary search\">\n                  검색\n                </button>\n              </div>\n              <div className=\"search-count\">\n                {hasSearch && (\n                  <span>총 {movieCount}건의 영화가 검색되었습니다.</span>\n                )}\n              </div>\n              <div className=\"movies\">\n                {movies.map(movie => (\n                  <SearchMovie\n                    key={movie.link}\n                    id={movie.link}\n                    year={movie.pubDate}\n                    title={movie.title}\n                    poster={movie.image}\n                    rating={movie.userRating}\n                    director={movie.director}\n                    actor={movie.actor}\n                  />\n                ))}\n              </div>\n            </div>\n          </form>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default MovieSearch;\n","import React from \"react\";\n\nclass SearchDetail extends React.Component {\n  componentDidMount() {\n    const { location, history } = this.props;\n\n    if (location.state === undefined) {\n      // state가 없는 경우\n      history.push(\"/\"); // '/' home으로 이동\n    }\n  }\n\n  render() {\n    const { location } = this.props;\n    if (location.state) {\n      return (\n        <div className=\"movie-detail-container\">\n          <div className=\"page-title-container\">\n            <h1 className=\"page-title movie-title\">\n              {location.state.title} ( {location.state.year} )\n            </h1>\n          </div>\n          <div className=\"movie-deatil\">\n            <div class=\"movie-content poster\">\n              <img\n                src={location.state.poster}\n                alt={location.state.title}\n                title={location.state.title}\n              />\n            </div>\n            <div className=\"movie-content rating\">\n              <span className=\"content-title\">Rating : </span>\n              <br />\n              <p>{location.state.rating}</p>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default SearchDetail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Book.scss\";\n\nfunction SearchBook({\n  id,\n  title,\n  poster,\n  price,\n  discount,\n  pubDate,\n  publisher,\n  author,\n  description\n}) {\n  return (\n    <div className=\"book\">\n      <a href={id} title={title} target=\"_blank\">\n        <img src={poster} alt={title} title={title} />\n        <div className=\"book__data\">\n          <h3 className=\"book__title\">\n            {title.replace(/<b>/gi, \"\").replace(/<\\/b>/gi, \"\")}\n          </h3>\n          <p className=\"book__pubdate\">\n            <span>출판일</span> {pubDate}\n          </p>\n          <p className=\"book__director\">\n            <span>작가</span> {author}\n          </p>\n          <p className=\"book__actor\">\n            <span>출판사</span> {publisher}\n          </p>\n          <p className=\"book__actor\">\n            <span>가격</span> {price}\n          </p>\n          {discount && (\n            <p className=\"book__actor\">\n              <span>할인가격</span> {discount}\n            </p>\n          )}\n\n          <p className=\"book__actor\">\n            <span>줄거리</span>\n            {description\n              .replace(/<b>/gi, \"\")\n              .replace(/<\\/b>/gi, \"\")\n              .replace(/&quot;/gi, \"\")}\n          </p>\n        </div>\n      </a>\n    </div>\n  );\n}\n\nSearchBook.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  discount: PropTypes.string,\n  pubDate: PropTypes.number.isRequired,\n  publisher: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n};\n\nexport default SearchBook;\n","import React from \"react\";\nimport axios from \"axios\";\nimport SearchBook from \"../components/SearchBook\";\nimport \"./Search.scss\";\n\nclass BookSearch extends React.Component {\n  state = {\n    isLoading: true,\n    hasSearch: false,\n    books: [],\n    value: \"\"\n  };\n\n  getSearchBook = async () => {\n    const ID_KEY = \"3qeEHqH6beiKz81p1B4L\";\n    const SECRET_KEY = \"uvodiheH4o\";\n    const search = this.state.value;\n\n    try {\n      if (search === \"\") {\n        this.setState({ books: [], isLoading: false, hasSearch: false });\n        console.log(\"blank\");\n      } else {\n        const {\n          data: { items }\n        } = await axios.get(\"/api/v1/search/book.json\", {\n          params: {\n            query: search\n          },\n          headers: {\n            \"X-Naver-Client-Id\": ID_KEY,\n            \"X-Naver-Client-Secret\": SECRET_KEY\n          }\n        });\n        console.log(items);\n        this.setState({ books: items, isLoading: false });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  componentDidMount() {\n    // 네이버 도서 데이터 로딩!\n    this.getSearchBook();\n  }\n\n  handleChange = (e: any) => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleSubmit = (e: any) => {\n    this.setState({ hasSearch: true });\n    this.getSearchBook();\n  };\n\n  render() {\n    const { isLoading, hasSearch, books } = this.state;\n    let bookCount = this.state.books.length;\n\n    return (\n      <section className=\"container search\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <form onSubmit={this.handleSubmit} className=\"search-form\">\n            <div className=\"search-wrapper\">\n              <div className=\"input__div\">\n                <h2>도서 검색</h2>\n                <input\n                  className=\"input__search\"\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                  placeholder=\"도서를 검색해보세요\"\n                />\n                <button type=\"submit\" className=\"action secondary search\">\n                  검색\n                </button>\n              </div>\n              <div className=\"search-count\">\n                {hasSearch && (\n                  <span>총 {bookCount}건의 도서가 검색되었습니다.</span>\n                )}\n              </div>\n              <div className=\"books\">\n                {books.map(book => (\n                  <SearchBook\n                    key={book.link}\n                    id={book.link}\n                    year={book.pubDate}\n                    title={book.title}\n                    poster={book.image}\n                    author={book.author}\n                    discount={book.discount}\n                    price={book.price}\n                    publisher={book.publisher}\n                    description={book.description}\n                    pubDate={book.pubdate}\n                  />\n                ))}\n              </div>\n            </div>\n          </form>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default BookSearch;\n","import React from \"react\";\nimport \"./App.scss\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Navigation from \"./components/Navigation\";\nimport Detail from \"./routes/Detail\";\nimport MovieSearch from \"./routes/MovieSearch\";\nimport SearchDetail from \"./routes/SearchDetail\";\nimport BookSearch from \"./routes/BookSearch\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={MovieSearch} />\n      <Route path=\"/movie-search\" component={MovieSearch} />\n      <Route path=\"/book-search\" component={BookSearch} />\n      <Route path=\"/about\" component={About} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}